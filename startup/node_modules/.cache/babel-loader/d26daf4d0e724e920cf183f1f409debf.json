{"ast":null,"code":"import React,{useRef}from\"react\";import{StatsPanel,CategoryTabs,Title,TabIndicator,OptionList,Option}from\"./styles\";import TabSwitcher,{Tab,TabPanel}from\"@/components/TabSwitcher\";import statOptions from\"./stat-options\";import useTabIndicator from\"@/hooks/use-tab-indicator\";import{useSelector,useDispatch}from\"react-redux\";import{statsActions}from\"@/redux/stats\";import clsx from\"clsx\";import Checkmark from\"./checkmark\";import EvaluateArrow from\"./evaluate-arrow\";var ChooseStats=function ChooseStats(){var tabContainer=useRef(null);var tabIndicator=useRef(null);var _useSelector=useSelector(function(store){return store.stats;}),selectedStats=_useSelector.selectedStats;var dispatch=useDispatch();var addStat=function addStat(name,category){dispatch(statsActions.addStat({name:name,category:category}));};var statsSelected=selectedStats.length===4;var isOptionActive=function isOptionActive(option){return!!selectedStats&&selectedStats.length>0&&!!selectedStats.find(function(stat){return!!stat&&stat.name===option;});};var selectedStatsInCategory=function selectedStatsInCategory(category){if(!selectedStats||selectedStats.length===0)return 0;return selectedStats.filter(function(stat){return!!stat&&stat.category===category;}).length;};useTabIndicator(tabContainer,tabIndicator);return React.createElement(StatsPanel,null,React.createElement(Title,null,\"Choose 4 skills\"),React.createElement(TabSwitcher,{initialTab:statOptions[0].category,emitChanges:true,id:\"stat-categories\"},React.createElement(CategoryTabs,{ref:tabContainer},statOptions.map(function(_ref,index){var category=_ref.category;var statCount=selectedStatsInCategory(category);return React.createElement(Tab,{id:category,key:category+\"$$\"+index},category,\" \",React.createElement(\"span\",{className:clsx(\"count\",statCount>0&&\"count-active\")},\"(\",statCount,\")\"));}),React.createElement(TabIndicator,{ref:tabIndicator})),statOptions.map(function(_ref2,index){var category=_ref2.category,options=_ref2.options;return React.createElement(TabPanel,{whenActive:category,key:\"panel$$\"+category+\"$$\"+index},React.createElement(OptionList,{className:\"option-list\"},options.map(function(option,i){return React.createElement(Option,{key:option+\"$$\"+i,disabled:statsSelected&&!isOptionActive(option),selected:isOptionActive(option),onClick:function onClick(){return addStat(option,category);}},React.createElement(\"span\",{className:\"check\"},React.createElement(Checkmark,null)),option);})));})),statsSelected&&React.createElement(Title,{as:Tab,id:\"distribute\",className:\"distribute-text\",style:{marginTop:85}},React.createElement(\"span\",{className:\"icon\"},React.createElement(EvaluateArrow,null)),\"Next, distribute points\"));};export default ChooseStats;","map":{"version":3,"sources":["/var/www/html/startup/src/components/StatPanels/choose-stats.tsx"],"names":["React","useRef","StatsPanel","CategoryTabs","Title","TabIndicator","OptionList","Option","TabSwitcher","Tab","TabPanel","statOptions","useTabIndicator","useSelector","useDispatch","statsActions","clsx","Checkmark","EvaluateArrow","ChooseStats","tabContainer","tabIndicator","store","stats","selectedStats","dispatch","addStat","name","category","statsSelected","length","isOptionActive","option","find","stat","selectedStatsInCategory","filter","map","index","statCount","options","i","marginTop"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\nimport { StatsPanel, CategoryTabs, Title, TabIndicator, OptionList, Option } from \"./styles\";\nimport TabSwitcher, { Tab, TabPanel } from \"@/components/TabSwitcher\";\nimport statOptions from \"./stat-options\";\nimport useTabIndicator from \"@/hooks/use-tab-indicator\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { IStoreState } from \"@/interfaces/IStoreState\";\nimport { Dispatch } from \"redux\";\nimport { statsActions } from \"@/redux/stats\";\nimport clsx from \"clsx\";\nimport Checkmark from \"./checkmark\";\nimport EvaluateArrow from \"./evaluate-arrow\";\n\nconst ChooseStats = () => {\n\tconst tabContainer = useRef(null);\n\tconst tabIndicator = useRef(null);\n\tconst { selectedStats } = useSelector((store: IStoreState) => store.stats);\n\tconst dispatch: Dispatch = useDispatch();\n\n\tconst addStat = (name: string, category: string) => {\n\t\tdispatch(statsActions.addStat({ name, category }));\n\t};\n\n\tconst statsSelected = selectedStats.length === 4;\n\n\tconst isOptionActive = (option: string) =>\n\t\t!!selectedStats && selectedStats.length > 0 && !!selectedStats.find(stat => !!stat && stat.name === option);\n\n\tconst selectedStatsInCategory = (category: string): number => {\n\t\tif (!selectedStats || selectedStats.length === 0) return 0;\n\t\treturn selectedStats.filter(stat => !!stat && stat.category === category).length;\n\t};\n\n\tuseTabIndicator(tabContainer, tabIndicator);\n\n\treturn (\n\t\t<StatsPanel>\n\t\t\t<Title>Choose 4 skills</Title>\n\t\t\t<TabSwitcher initialTab={statOptions[0].category} emitChanges={true} id=\"stat-categories\">\n\t\t\t\t<CategoryTabs ref={tabContainer}>\n\t\t\t\t\t{statOptions.map(({ category }, index: number) => {\n\t\t\t\t\t\tconst statCount = selectedStatsInCategory(category);\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Tab id={category} key={category + \"$$\" + index}>\n\t\t\t\t\t\t\t\t{category}{\" \"}\n\t\t\t\t\t\t\t\t<span className={clsx(\"count\", statCount > 0 && \"count-active\")}>({statCount})</span>\n\t\t\t\t\t\t\t</Tab>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t\t<TabIndicator ref={tabIndicator} />\n\t\t\t\t</CategoryTabs>\n\t\t\t\t{statOptions.map(({ category, options }, index: number) => (\n\t\t\t\t\t<TabPanel whenActive={category} key={\"panel$$\" + category + \"$$\" + index}>\n\t\t\t\t\t\t<OptionList className=\"option-list\">\n\t\t\t\t\t\t\t{options.map((option: string, i: number) => (\n\t\t\t\t\t\t\t\t<Option\n\t\t\t\t\t\t\t\t\tkey={option + \"$$\" + i}\n\t\t\t\t\t\t\t\t\tdisabled={statsSelected && !isOptionActive(option)}\n\t\t\t\t\t\t\t\t\tselected={isOptionActive(option)}\n\t\t\t\t\t\t\t\t\tonClick={() => addStat(option, category)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<span className=\"check\">\n\t\t\t\t\t\t\t\t\t\t<Checkmark />\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t{option}\n\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</OptionList>\n\t\t\t\t\t</TabPanel>\n\t\t\t\t))}\n\t\t\t</TabSwitcher>\n\t\t\t{statsSelected && (\n\t\t\t\t<Title as={Tab} id=\"distribute\" className=\"distribute-text\" style={{ marginTop: 85 }}>\n\t\t\t\t\t<span className=\"icon\">\n\t\t\t\t\t\t<EvaluateArrow />\n\t\t\t\t\t</span>\n\t\t\t\t\tNext, distribute points\n\t\t\t\t</Title>\n\t\t\t)}\n\t\t</StatsPanel>\n\t);\n};\n\nexport default ChooseStats;\n"]},"metadata":{},"sourceType":"module"}