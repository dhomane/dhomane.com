{"ast":null,"code":"import React from\"react\";import{OptionPanel}from\"./styles\";import OptionColorSelectable from\"@/components/Selectables/option-color-selectable\";import tops from\"@/components/CharacterOptions/tops\";import{useDispatch,useSelector}from\"react-redux\";import{setTop}from\"@/redux/character/character.actions\";import{getColorSet,decideNextSet}from\"@/utils/selection-utils\";var TopPanel=function TopPanel(){var tshirt=tops.tshirt,shirt=tops.shirt,jacket=tops.jacket,hoodie=tops.hoodie;var dispatch=useDispatch();var _useSelector=useSelector(function(store){return store.character;}),activeTShirt=_useSelector.tshirt,activeShirt=_useSelector.shirt,activeJacket=_useSelector.jacket,activeHoodie=_useSelector.hoodie;return React.createElement(OptionPanel,{id:\"top-panel\",\"aria-labelledby\":\"top\"},React.createElement(OptionColorSelectable,{activeColor:activeTShirt,title:\"T-shirt\",colors:tshirt.colors,thumbnail:tshirt.thumb,onColorClicked:function onColorClicked(color){return dispatch(setTop(\"tshirt\",color));},onResetClicked:function onResetClicked(){return dispatch(setTop(\"tshirt\",undefined));},onThumbClicked:function onThumbClicked(){return dispatch(setTop(\"tshirt\",decideNextSet(activeTShirt,getColorSet(tshirt.defaultColor,tshirt.colors))));}}),React.createElement(OptionColorSelectable,{activeColor:activeShirt,title:\"Shirt\",colors:shirt.colors,thumbnail:shirt.thumb,onColorClicked:function onColorClicked(color){return dispatch(setTop(\"shirt\",color));},onResetClicked:function onResetClicked(){return dispatch(setTop(\"shirt\",undefined));},onThumbClicked:function onThumbClicked(){return dispatch(setTop(\"shirt\",decideNextSet(activeShirt,getColorSet(shirt.defaultColor,shirt.colors))));}}),React.createElement(OptionColorSelectable,{activeColor:activeJacket,title:\"Jacket\",colors:jacket.colors,thumbnail:jacket.thumb,onColorClicked:function onColorClicked(color){return dispatch(setTop(\"jacket\",color));},onResetClicked:function onResetClicked(){return dispatch(setTop(\"jacket\",undefined));},onThumbClicked:function onThumbClicked(){return dispatch(setTop(\"jacket\",decideNextSet(activeJacket,getColorSet(jacket.defaultColor,jacket.colors))));}}),React.createElement(OptionColorSelectable,{activeColor:activeHoodie,title:\"Hoodie\",colors:hoodie.colors,thumbnail:hoodie.thumb,onColorClicked:function onColorClicked(color){return dispatch(setTop(\"hoodie\",color));},onResetClicked:function onResetClicked(){return dispatch(setTop(\"hoodie\",undefined));},onThumbClicked:function onThumbClicked(){return dispatch(setTop(\"hoodie\",decideNextSet(activeHoodie,getColorSet(hoodie.defaultColor,hoodie.colors))));}}));};export default TopPanel;","map":{"version":3,"sources":["/var/www/html/startup/src/components/OptionPanels/top-panel.tsx"],"names":["React","OptionPanel","OptionColorSelectable","tops","useDispatch","useSelector","setTop","getColorSet","decideNextSet","TopPanel","tshirt","shirt","jacket","hoodie","dispatch","store","character","activeTShirt","activeShirt","activeJacket","activeHoodie","colors","thumb","color","undefined","defaultColor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { OptionPanel } from \"./styles\";\nimport OptionColorSelectable from \"@/components/Selectables/option-color-selectable\";\nimport tops from \"@/components/CharacterOptions/tops\";\nimport { Dispatch } from \"redux\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setTop } from \"@/redux/character/character.actions\";\nimport { IStoreState } from \"@/interfaces/IStoreState\";\nimport { getColorSet, decideNextSet } from \"@/utils/selection-utils\";\n\nconst TopPanel = () => {\n\tconst { tshirt, shirt, jacket, hoodie } = tops;\n\tconst dispatch: Dispatch = useDispatch();\n\tconst { tshirt: activeTShirt, shirt: activeShirt, jacket: activeJacket, hoodie: activeHoodie } = useSelector(\n\t\t(store: IStoreState) => store.character\n\t);\n\n\treturn (\n\t\t<OptionPanel id=\"top-panel\" aria-labelledby=\"top\">\n\t\t\t<OptionColorSelectable\n\t\t\t\tactiveColor={activeTShirt}\n\t\t\t\ttitle=\"T-shirt\"\n\t\t\t\tcolors={tshirt.colors}\n\t\t\t\tthumbnail={tshirt.thumb}\n\t\t\t\tonColorClicked={color => dispatch(setTop(\"tshirt\", color))}\n\t\t\t\tonResetClicked={() => dispatch(setTop(\"tshirt\", undefined))}\n\t\t\t\tonThumbClicked={() =>\n\t\t\t\t\tdispatch(\n\t\t\t\t\t\tsetTop(\"tshirt\", decideNextSet(activeTShirt, getColorSet(tshirt.defaultColor, tshirt.colors)))\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t/>\n\t\t\t<OptionColorSelectable\n\t\t\t\tactiveColor={activeShirt}\n\t\t\t\ttitle=\"Shirt\"\n\t\t\t\tcolors={shirt.colors}\n\t\t\t\tthumbnail={shirt.thumb}\n\t\t\t\tonColorClicked={color => dispatch(setTop(\"shirt\", color))}\n\t\t\t\tonResetClicked={() => dispatch(setTop(\"shirt\", undefined))}\n\t\t\t\tonThumbClicked={() =>\n\t\t\t\t\tdispatch(setTop(\"shirt\", decideNextSet(activeShirt, getColorSet(shirt.defaultColor, shirt.colors))))\n\t\t\t\t}\n\t\t\t/>\n\t\t\t<OptionColorSelectable\n\t\t\t\tactiveColor={activeJacket}\n\t\t\t\ttitle=\"Jacket\"\n\t\t\t\tcolors={jacket.colors}\n\t\t\t\tthumbnail={jacket.thumb}\n\t\t\t\tonColorClicked={color => dispatch(setTop(\"jacket\", color))}\n\t\t\t\tonResetClicked={() => dispatch(setTop(\"jacket\", undefined))}\n\t\t\t\tonThumbClicked={() =>\n\t\t\t\t\tdispatch(\n\t\t\t\t\t\tsetTop(\"jacket\", decideNextSet(activeJacket, getColorSet(jacket.defaultColor, jacket.colors)))\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t/>\n\t\t\t<OptionColorSelectable\n\t\t\t\tactiveColor={activeHoodie}\n\t\t\t\ttitle=\"Hoodie\"\n\t\t\t\tcolors={hoodie.colors}\n\t\t\t\tthumbnail={hoodie.thumb}\n\t\t\t\tonColorClicked={color => dispatch(setTop(\"hoodie\", color))}\n\t\t\t\tonResetClicked={() => dispatch(setTop(\"hoodie\", undefined))}\n\t\t\t\tonThumbClicked={() =>\n\t\t\t\t\tdispatch(\n\t\t\t\t\t\tsetTop(\"hoodie\", decideNextSet(activeHoodie, getColorSet(hoodie.defaultColor, hoodie.colors)))\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t/>\n\t\t</OptionPanel>\n\t);\n};\n\nexport default TopPanel;\n"]},"metadata":{},"sourceType":"module"}