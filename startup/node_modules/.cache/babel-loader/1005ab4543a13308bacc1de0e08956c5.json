{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar react_1 = tslib_1.__importStar(require(\"react\"));\n\nvar emotion_1 = require(\"emotion\");\n\nvar constants_1 = require(\"../utils/constants\");\n\nvar defaultOptionRenderer_1 = tslib_1.__importDefault(require(\"../utils/defaultOptionRenderer\"));\n\nvar Dropdown_1 = tslib_1.__importDefault(require(\"../styles/Dropdown\"));\n\nvar Dropdown =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(Dropdown, _super);\n\n  function Dropdown(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.elements = [];\n    _this.container = react_1.createRef();\n    _this.button = react_1.createRef();\n\n    _this.renderArrow = function () {\n      var _a = _this.props,\n          hideArrow = _a.hideArrow,\n          arrowRenderer = _a.arrowRenderer;\n      var open = _this.state.open;\n\n      var arrowClass = _this.getStyle(constants_1.StyleKeys.Arrow);\n\n      if (hideArrow) return null;\n      if (arrowRenderer) return arrowRenderer(open);\n      return react_1.default.createElement(\"div\", {\n        className: arrowClass\n      });\n    };\n\n    _this.renderOptions = function () {\n      var _a = _this.props,\n          optionRenderer = _a.optionRenderer,\n          selectedOption = _a.selectedOption,\n          selectedOptionClassName = _a.selectedOptionClassName,\n          optionClassName = _a.optionClassName,\n          options = _a.options;\n      var internalSelectedOption = _this.state.internalSelectedOption;\n      _this.elements = []; // Reset ref array\n\n      if (optionRenderer) {\n        return optionRenderer(selectedOption || internalSelectedOption, options, _this.onOptionClicked, _this.elements, _this.getStyle);\n      }\n\n      return defaultOptionRenderer_1.default(selectedOption, options, selectedOptionClassName, optionClassName, _this.onOptionClicked, _this.elements, _this.getStyle);\n    };\n\n    _this.onClick = function (e) {\n      if (_this.container.current && !_this.container.current.contains(e.target)) {\n        _this.closeDropdown();\n      }\n    };\n\n    _this.onDropdownClick = function (_a) {\n      var nativeEvent = _a.nativeEvent;\n      var disabled = _this.props.disabled;\n\n      if (nativeEvent instanceof KeyboardEvent) {\n        if (nativeEvent.keyCode !== constants_1.KEY_CODES.ENTER) return;\n        nativeEvent.preventDefault();\n      }\n\n      if (!disabled) {\n        _this.setState(function (p) {\n          return {\n            open: !p.open,\n            focusedIndex: p.open ? -1 : p.focusedIndex\n          };\n        });\n      }\n    };\n\n    _this.onOptionClicked = function (_a) {\n      var nativeEvent = _a.nativeEvent;\n      var setSelected = _this.props.setSelected;\n\n      if (nativeEvent instanceof KeyboardEvent) {\n        if (nativeEvent.keyCode !== constants_1.KEY_CODES.ENTER) return;\n        nativeEvent.preventDefault();\n      }\n\n      if (nativeEvent.target) {\n        var selectedOption = nativeEvent.target.innerText;\n        setSelected(selectedOption);\n\n        _this.setState({\n          open: false,\n          internalSelectedOption: selectedOption\n        });\n\n        if (nativeEvent instanceof KeyboardEvent && nativeEvent.keyCode && nativeEvent.keyCode === constants_1.KEY_CODES.ENTER && _this.button.current) {\n          _this.button.current.focus();\n        }\n      }\n    };\n\n    _this.onKeyDown = function (_a) {\n      var nativeEvent = _a.nativeEvent;\n      var keyCode = nativeEvent.keyCode,\n          key = nativeEvent.key;\n      var searchable = _this.props.searchable;\n\n      if (constants_1.NAVIGATION_KEYS.indexOf(keyCode) !== -1) {\n        nativeEvent.preventDefault();\n\n        _this.onNavigation(keyCode);\n      } else if (keyCode === constants_1.KEY_CODES.TAB) {\n        _this.closeDropdown();\n      } else if (key.length === 1 && searchable) {\n        _this.searchDropdown(key.toLowerCase());\n      }\n    };\n\n    _this.onNavigation = function (keyCode) {\n      var focusedIndex = _this.state.focusedIndex;\n      var pageKeyTraverseSize = _this.props.pageKeyTraverseSize;\n\n      switch (keyCode) {\n        case constants_1.KEY_CODES.UP_ARROW:\n          if (focusedIndex === -1) {\n            _this.setState({\n              focusedIndex: 0\n            }, _this.setFocus);\n          } else if (focusedIndex === 0) {\n            _this.setState({\n              focusedIndex: _this.elements.length - 1\n            }, _this.setFocus);\n          } else {\n            _this.setState(function (p) {\n              return {\n                focusedIndex: p.focusedIndex - 1\n              };\n            }, _this.setFocus);\n          }\n\n          break;\n\n        case constants_1.KEY_CODES.DOWN_ARROW:\n          _this.setState(function (p) {\n            return {\n              focusedIndex: (p.focusedIndex + 1) % _this.elements.length\n            };\n          }, _this.setFocus);\n\n          break;\n\n        case constants_1.KEY_CODES.PAGE_UP:\n          if (focusedIndex === -1 || focusedIndex - pageKeyTraverseSize < 0 && focusedIndex !== 0) {\n            _this.setState({\n              focusedIndex: 0\n            }, _this.setFocus);\n          } else if (focusedIndex - pageKeyTraverseSize < 0) {\n            _this.setState({\n              focusedIndex: _this.elements.length - 1\n            }, _this.setFocus);\n          } else {\n            _this.setState(function (p) {\n              return {\n                focusedIndex: p.focusedIndex - pageKeyTraverseSize\n              };\n            }, _this.setFocus);\n          }\n\n          break;\n\n        case constants_1.KEY_CODES.PAGE_DOWN:\n          if (focusedIndex === -1 || focusedIndex === _this.elements.length - 1) {\n            _this.setState({\n              focusedIndex: 0\n            }, _this.setFocus);\n          } else if (focusedIndex + pageKeyTraverseSize > _this.elements.length - 1) {\n            _this.setState({\n              focusedIndex: _this.elements.length - 1\n            }, _this.setFocus);\n          } else {\n            _this.setState(function (p) {\n              return {\n                focusedIndex: (p.focusedIndex + pageKeyTraverseSize) % _this.elements.length\n              };\n            }, _this.setFocus);\n          }\n\n          break;\n\n        case constants_1.KEY_CODES.ESCAPE:\n          _this.closeDropdown(true);\n\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    _this.getStyle = function (key, extraState) {\n      var style = _this.props.style;\n      var baseStyle = Dropdown_1.default[key](_this.props, _this.state, extraState || {});\n      var customStyle = style[key];\n      return customStyle ? emotion_1.css(customStyle(baseStyle, _this.state, extraState)) : emotion_1.css(baseStyle);\n    };\n\n    _this.setFocus = function () {\n      var focusedIndex = _this.state.focusedIndex;\n      var element = _this.elements[focusedIndex];\n\n      if (element) {\n        element.focus();\n      }\n    };\n\n    _this.closeDropdown = function (focus) {\n      if (focus === void 0) {\n        focus = false;\n      }\n\n      _this.setState(function (p) {\n        return {\n          open: false,\n          focusedIndex: p.internalSelectedOption ? p.focusedIndex : -1\n        };\n      });\n\n      if (focus && _this.button.current) {\n        _this.button.current.focus();\n      }\n    };\n\n    _this.searchDropdown = function (key) {\n      var searchTerm = _this.state.searchTerm;\n      var oldTerm = searchTerm;\n\n      _this.setState(function (p) {\n        return {\n          searchTerm: p.searchTerm + key\n        };\n      });\n\n      _this.searchList(oldTerm + key);\n\n      _this.clearTimer();\n\n      var timer = setTimeout(_this.clearSearch, 1500);\n\n      _this.setState({\n        searchTimer: timer\n      });\n    };\n\n    _this.searchList = function (value) {\n      var element = _this.elements.find(function (el) {\n        return el && el.innerText.toLowerCase().indexOf(value) === 0;\n      });\n\n      if (element) element.focus();\n    };\n\n    _this.clearTimer = function () {\n      var searchTimer = _this.state.searchTimer;\n\n      if (searchTimer) {\n        clearTimeout(searchTimer);\n\n        _this.setState({\n          searchTimer: null\n        });\n      }\n    };\n\n    _this.clearSearch = function () {\n      _this.setState({\n        searchTerm: ''\n      });\n    };\n\n    _this.state = {\n      focusedIndex: -1,\n      internalSelectedOption: props.selectedOption,\n      open: false,\n      searchTerm: '',\n      searchTimer: null\n    };\n    return _this;\n  }\n\n  Dropdown.prototype.componentDidMount = function () {\n    document.addEventListener('mouseup', this.onClick, false);\n    document.addEventListener('touchend', this.onClick, false);\n  };\n\n  Dropdown.prototype.componentWillUnmount = function () {\n    document.removeEventListener('mouseup', this.onClick);\n    document.removeEventListener('touchend', this.onClick);\n  };\n\n  Dropdown.prototype.render = function () {\n    var _a = this.props,\n        ariaDescribedBy = _a.ariaDescribedBy,\n        ariaLabel = _a.ariaLabel,\n        ariaLabelledBy = _a.ariaLabelledBy,\n        contentClassName = _a.contentClassName,\n        buttonClassName = _a.buttonClassName,\n        disabled = _a.disabled,\n        id = _a.id,\n        placeholder = _a.placeholder,\n        selectedOption = _a.selectedOption,\n        selectedValueClassName = _a.selectedValueClassName;\n    var internalSelectedOption = this.state.internalSelectedOption;\n    var displayedValue = selectedOption || internalSelectedOption || placeholder || '';\n    var wrapperClass = this.getStyle(constants_1.StyleKeys.DropdownWrapper);\n    var dropdownButtonClass = emotion_1.cx(buttonClassName, this.getStyle(constants_1.StyleKeys.DropdownButton));\n    var displayedValueClass = emotion_1.cx(selectedValueClassName, this.getStyle(constants_1.StyleKeys.DisplayedValue));\n    var contentClass = emotion_1.cx(contentClassName, this.getStyle(constants_1.StyleKeys.OptionContainer));\n    return react_1.default.createElement(\"div\", {\n      className: wrapperClass,\n      onKeyDown: this.onKeyDown,\n      ref: this.container\n    }, react_1.default.createElement(\"button\", {\n      \"aria-label\": ariaLabel,\n      \"aria-describedby\": ariaDescribedBy,\n      \"aria-labelledby\": ariaLabelledBy,\n      className: dropdownButtonClass,\n      disabled: disabled,\n      id: id,\n      onClick: this.onDropdownClick,\n      onKeyDown: this.onDropdownClick,\n      ref: this.button,\n      type: \"button\"\n    }, react_1.default.createElement(\"div\", {\n      className: displayedValueClass\n    }, displayedValue), this.renderArrow()), react_1.default.createElement(\"ul\", {\n      className: contentClass\n    }, this.renderOptions()));\n  };\n\n  Dropdown.defaultProps = {\n    ariaDescribedBy: null,\n    ariaLabel: null,\n    ariaLabelledBy: null,\n    arrowRenderer: undefined,\n    buttonClassName: undefined,\n    centerText: false,\n    contentClassName: null,\n    disabled: false,\n    height: null,\n    hideArrow: false,\n    id: null,\n    maxContentHeight: null,\n    openUp: false,\n    optionClassName: null,\n    optionRenderer: undefined,\n    options: [],\n    pageKeyTraverseSize: 10,\n    placeholder: 'Select ...',\n    searchable: true,\n    selectedOption: null,\n    selectedOptionClassName: null,\n    selectedValueClassName: null,\n    style: {},\n    width: null\n  };\n  return Dropdown;\n}(react_1.Component);\n\nexports.default = Dropdown;","map":null,"metadata":{},"sourceType":"script"}