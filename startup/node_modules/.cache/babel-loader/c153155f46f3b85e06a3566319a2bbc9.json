{"ast":null,"code":"import _regeneratorRuntime from \"/var/www/html/startup/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/html/startup/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/var/www/html/startup/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useContext, useEffect, useState } from \"react\";\nvar defaultUserInfo = {\n  identityProvider: undefined,\n  userId: undefined,\n  userDetails: undefined,\n  userRoles: []\n};\nvar UserInfoContext = React.createContext(defaultUserInfo);\n\nvar UserInfoContextProvider = function UserInfoContextProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(defaultUserInfo),\n      _useState2 = _slicedToArray(_useState, 2),\n      userInfo = _useState2[0],\n      setUserInfo = _useState2[1];\n\n  useEffect(function () {\n    var run =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var res, json;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"/.auth/me\");\n\n              case 2:\n                res = _context.sent;\n                _context.next = 5;\n                return res.json();\n\n              case 5:\n                json = _context.sent;\n\n                if (json.clientPrincipal) {\n                  setUserInfo(json.clientPrincipal);\n                }\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function run() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    run();\n  }, []);\n  return React.createElement(UserInfoContext.Provider, {\n    value: userInfo\n  }, children);\n};\n\nvar useUserInfo = function useUserInfo() {\n  return useContext(UserInfoContext);\n};\n\nexport { UserInfoContextProvider, useUserInfo };","map":null,"metadata":{},"sourceType":"module"}