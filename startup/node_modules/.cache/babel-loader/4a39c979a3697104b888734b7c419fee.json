{"ast":null,"code":"import _classCallCheck from\"/var/www/html/startup/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/var/www/html/startup/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";export var Config=/*#__PURE__*/function(){function Config(){_classCallCheck(this,Config);}_createClass(Config,[{key:\"persistEventID\",value:function persistEventID(){var params=new URLSearchParams(window.location.search);var eventParam=params.get(\"eventID\");if(eventParam){this._writeEventIDToStorage(eventParam);}}// TODO: I fully realise that this should be probably be pulled into Redux. Right now the likely race conditions are\n// limited and my patience for dealing with redux boilerplate is even more limited.\n},{key:\"_eventIDFromStorage\",value:function _eventIDFromStorage(){return window.localStorage.getItem(\"StartupAdventurer_eventID\");}},{key:\"_writeEventIDToStorage\",value:function _writeEventIDToStorage(eventID){window.localStorage.setItem(\"StartupAdventurer_eventID\",eventID);}},{key:\"eventID\",get:function get(){return this._eventIDFromStorage()||\"unknown\";}}]);return Config;}();","map":{"version":3,"sources":["/var/www/html/startup/src/utils/config.ts"],"names":["Config","params","URLSearchParams","window","location","search","eventParam","get","_writeEventIDToStorage","localStorage","getItem","eventID","setItem","_eventIDFromStorage"],"mappings":"sRAAA,UAAaA,CAAAA,MAAb,mJAKkB,CAChB,GAAIC,CAAAA,MAAM,CAAG,GAAIC,CAAAA,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAb,CACA,GAAIC,CAAAA,UAAU,CAAGL,MAAM,CAACM,GAAP,CAAW,SAAX,CAAjB,CACA,GAAID,UAAJ,CAAgB,CACf,KAAKE,sBAAL,CAA4BF,UAA5B,EACA,CACD,CAED;AACA;AAdD,iEAeuB,CACrB,MAAOH,CAAAA,MAAM,CAACM,YAAP,CAAoBC,OAApB,CAA4B,2BAA5B,CAAP,CACA,CAjBF,sEAmBwBC,OAnBxB,CAmByC,CACvCR,MAAM,CAACM,YAAP,CAAoBG,OAApB,CAA4B,2BAA5B,CAAyDD,OAAzD,EACA,CArBF,mCACe,CACb,MAAO,MAAKE,mBAAL,IAA8B,SAArC,CACA,CAHF","sourcesContent":["export class Config {\n\tget eventID() {\n\t\treturn this._eventIDFromStorage() || \"unknown\";\n\t}\n\n\tpersistEventID() {\n\t\tlet params = new URLSearchParams(window.location.search);\n\t\tlet eventParam = params.get(\"eventID\") as string;\n\t\tif (eventParam) {\n\t\t\tthis._writeEventIDToStorage(eventParam);\n\t\t}\n\t}\n\n\t// TODO: I fully realise that this should be probably be pulled into Redux. Right now the likely race conditions are\n\t// limited and my patience for dealing with redux boilerplate is even more limited.\n\t_eventIDFromStorage() {\n\t\treturn window.localStorage.getItem(\"StartupAdventurer_eventID\");\n\t}\n\n\t_writeEventIDToStorage(eventID: string) {\n\t\twindow.localStorage.setItem(\"StartupAdventurer_eventID\", eventID);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}