{"ast":null,"code":"import isEqual from\"lodash-es/isEqual\";import isEmpty from\"lodash-es/isEmpty\";export var getColorSet=function getColorSet(colorPalette,colorOptions){if(!colorPalette||!colorOptions)return{name:\"\"};var name=Object.keys(colorOptions).filter(function(key){return isEqual(colorOptions[key],colorPalette);})[0]||\"\";return{name:name,palette:colorPalette};};export var decideNextSet=function decideNextSet(activeSet,newSet){return!isEmpty(activeSet)?undefined:newSet;};","map":{"version":3,"sources":["/var/www/html/startup/src/utils/selection-utils.ts"],"names":["isEqual","isEmpty","getColorSet","colorPalette","colorOptions","name","Object","keys","filter","key","palette","decideNextSet","activeSet","newSet","undefined"],"mappings":"AACA,MAAOA,CAAAA,OAAP,KAAoB,mBAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CAOA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,YAAD,CAAuBC,YAAvB,CAAkE,CAC5F,GAAI,CAACD,YAAD,EAAiB,CAACC,YAAtB,CAAoC,MAAO,CAAEC,IAAI,CAAE,EAAR,CAAP,CAEpC,GAAMA,CAAAA,IAAI,CAAGC,MAAM,CAACC,IAAP,CAAYH,YAAZ,EAA0BI,MAA1B,CAAiC,SAAAC,GAAG,QAAIT,CAAAA,OAAO,CAACI,YAAY,CAACK,GAAD,CAAb,CAAoBN,YAApB,CAAX,EAApC,EAAkF,CAAlF,GAAwF,EAArG,CAEA,MAAO,CACNE,IAAI,CAAJA,IADM,CAENK,OAAO,CAAEP,YAFH,CAAP,CAIA,CATM,CAWP,MAAO,IAAMQ,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAC5BC,SAD4B,CAE5BC,MAF4B,CAGD,CAC3B,MAAO,CAACZ,OAAO,CAACW,SAAD,CAAR,CAAsBE,SAAtB,CAAkCD,MAAzC,CACA,CALM","sourcesContent":["import { Colors, IColorOptions } from \"@/interfaces/Colors\";\nimport isEqual from \"lodash-es/isEqual\";\nimport isEmpty from \"lodash-es/isEmpty\";\n\nexport interface IColorSet {\n\tname: string;\n\tpalette?: Colors;\n}\n\nexport const getColorSet = (colorPalette: Colors, colorOptions: IColorOptions): IColorSet => {\n\tif (!colorPalette || !colorOptions) return { name: \"\" };\n\n\tconst name = Object.keys(colorOptions).filter(key => isEqual(colorOptions[key], colorPalette))[0] || \"\";\n\n\treturn {\n\t\tname,\n\t\tpalette: colorPalette,\n\t};\n};\n\nexport const decideNextSet = (\n\tactiveSet: IColorSet | undefined,\n\tnewSet: IColorSet | undefined\n): IColorSet | undefined => {\n\treturn !isEmpty(activeSet) ? undefined : newSet;\n};\n"]},"metadata":{},"sourceType":"module"}