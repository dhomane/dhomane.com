{"ast":null,"code":"import _objectWithoutProperties from\"/var/www/html/startup/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from\"react\";import{Prev}from\"./styles\";import{useDispatch,useSelector}from\"react-redux\";import{uiActions}from\"@/redux/ui\";var PrevButton=function PrevButton(_ref){var _ref$disabled=_ref.disabled,disabled=_ref$disabled===void 0?false:_ref$disabled,children=_ref.children,restProps=_objectWithoutProperties(_ref,[\"disabled\",\"children\"]);var dispatch=useDispatch();var _useSelector=useSelector(function(store){return store.ui;}),totalSteps=_useSelector.totalSteps,currentStep=_useSelector.currentStep;var navigatePrev=function navigatePrev(){/* if user is about to navigate to first screen, show \"game over?\" screen */if(totalSteps>1&&currentStep===1){dispatch(uiActions.startOver());}else{dispatch(uiActions.navigatePrev());}};return React.createElement(Prev,Object.assign({onClick:navigatePrev,disabled:disabled},restProps),!!children?children:null);};export default PrevButton;","map":{"version":3,"sources":["/var/www/html/startup/src/components/Stepper/PrevButton.tsx"],"names":["React","Prev","useDispatch","useSelector","uiActions","PrevButton","disabled","children","restProps","dispatch","store","ui","totalSteps","currentStep","navigatePrev","startOver"],"mappings":"gKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,KAAqB,UAArB,CAEA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,SAAT,KAA0B,YAA1B,CAQA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAA0D,wBAAvDC,QAAuD,CAAvDA,QAAuD,wBAA5C,KAA4C,eAArCC,QAAqC,MAArCA,QAAqC,CAAxBC,SAAwB,wDAC5E,GAAMC,CAAAA,QAAkB,CAAGP,WAAW,EAAtC,CAD4E,iBAExCC,WAAW,CAAC,SAACO,KAAD,QAAwBA,CAAAA,KAAK,CAACC,EAA9B,EAAD,CAF6B,CAEpEC,UAFoE,cAEpEA,UAFoE,CAExDC,WAFwD,cAExDA,WAFwD,CAG5E,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CAC1B,4EACA,GAAIF,UAAU,CAAG,CAAb,EAAkBC,WAAW,GAAK,CAAtC,CAAyC,CACxCJ,QAAQ,CAACL,SAAS,CAACW,SAAV,EAAD,CAAR,CACA,CAFD,IAEO,CACNN,QAAQ,CAACL,SAAS,CAACU,YAAV,EAAD,CAAR,CACA,CACD,CAPD,CASA,MACC,qBAAC,IAAD,gBAAM,OAAO,CAAEA,YAAf,CAA6B,QAAQ,CAAER,QAAvC,EAAqDE,SAArD,EACE,CAAC,CAACD,QAAF,CAAaA,QAAb,CAAwB,IAD1B,CADD,CAKA,CAjBD,CAmBA,cAAeF,CAAAA,UAAf","sourcesContent":["import React from \"react\";\nimport { Prev } from \"./styles\";\nimport { Dispatch } from \"redux\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { uiActions } from \"@/redux/ui\";\nimport { IStoreState } from \"@/interfaces/IStoreState\";\n\ninterface IProps {\n\tdisabled?: boolean;\n\t[key: string]: any;\n}\n\nconst PrevButton = ({ disabled = false, children, ...restProps }: IProps) => {\n\tconst dispatch: Dispatch = useDispatch();\n\tconst { totalSteps, currentStep } = useSelector((store: IStoreState) => store.ui);\n\tconst navigatePrev = () => {\n\t\t/* if user is about to navigate to first screen, show \"game over?\" screen */\n\t\tif (totalSteps > 1 && currentStep === 1) {\n\t\t\tdispatch(uiActions.startOver());\n\t\t} else {\n\t\t\tdispatch(uiActions.navigatePrev());\n\t\t}\n\t};\n\n\treturn (\n\t\t<Prev onClick={navigatePrev} disabled={disabled} {...restProps}>\n\t\t\t{!!children ? children : null}\n\t\t</Prev>\n\t);\n};\n\nexport default PrevButton;\n"]},"metadata":{},"sourceType":"module"}