{"ast":null,"code":"import React from\"react\";import facialHair from\"@/components/CharacterOptions/facial-hair\";import{useSelector}from\"react-redux\";import get from\"lodash-es/get\";import camelCase from\"lodash-es/camelCase\";var FacialHairLayer=function FacialHairLayer(){var _useSelector=useSelector(function(store){return store.character;}),_useSelector$facialHa=_useSelector.facialHair,activeFacialHair=_useSelector$facialHa===void 0?\"\":_useSelector$facialHa,facialHairColor=_useSelector.facialHairColor;var activeLayer=get(facialHair,[camelCase(activeFacialHair),\"layer\"]);return React.createElement(\"g\",{id:\"character-facial-hair\"},activeLayer?activeLayer({colors:get(facialHairColor,[\"palette\"])}):null);};export default FacialHairLayer;","map":{"version":3,"sources":["/var/www/html/startup/src/components/Character/layers/facial-hair.tsx"],"names":["React","facialHair","useSelector","get","camelCase","FacialHairLayer","store","character","activeFacialHair","facialHairColor","activeLayer","colors"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,2CAAvB,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,MAAOC,CAAAA,GAAP,KAAgB,eAAhB,CACA,MAAOC,CAAAA,SAAP,KAAsB,qBAAtB,CAGA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,kBACkCH,WAAW,CAAC,SAACI,KAAD,QAAwBA,CAAAA,KAAK,CAACC,SAA9B,EAAD,CAD7C,oCACrBN,UADqB,CACTO,gBADS,gCACU,EADV,uBACcC,eADd,cACcA,eADd,CAE7B,GAAMC,CAAAA,WAAW,CAAGP,GAAG,CAACF,UAAD,CAAa,CAACG,SAAS,CAACI,gBAAD,CAAV,CAA8B,OAA9B,CAAb,CAAvB,CAEA,MACC,0BAAG,EAAE,CAAC,uBAAN,EACEE,WAAW,CAAGA,WAAW,CAAC,CAAEC,MAAM,CAAER,GAAG,CAACM,eAAD,CAAkB,CAAC,SAAD,CAAlB,CAAb,CAAD,CAAd,CAAgE,IAD7E,CADD,CAKA,CATD,CAWA,cAAeJ,CAAAA,eAAf","sourcesContent":["import React from \"react\";\nimport facialHair from \"@/components/CharacterOptions/facial-hair\";\nimport { useSelector } from \"react-redux\";\nimport get from \"lodash-es/get\";\nimport camelCase from \"lodash-es/camelCase\";\nimport { IStoreState } from \"@/interfaces/IStoreState\";\n\nconst FacialHairLayer = () => {\n\tconst { facialHair: activeFacialHair = \"\", facialHairColor } = useSelector((store: IStoreState) => store.character);\n\tconst activeLayer = get(facialHair, [camelCase(activeFacialHair), \"layer\"]);\n\n\treturn (\n\t\t<g id=\"character-facial-hair\">\n\t\t\t{activeLayer ? activeLayer({ colors: get(facialHairColor, [\"palette\"]) }) : null}\n\t\t</g>\n\t);\n};\n\nexport default FacialHairLayer;\n"]},"metadata":{},"sourceType":"module"}