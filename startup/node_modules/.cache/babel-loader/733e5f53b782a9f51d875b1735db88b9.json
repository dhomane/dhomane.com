{"ast":null,"code":"import React,{Fragment}from\"react\";import{useSelector}from\"react-redux\";import accessories from\"@/components/CharacterOptions/accessories\";import get from\"lodash-es/get\";var CharacterAccessories=function CharacterAccessories(){var _useSelector=useSelector(function(store){return store.character;}),selectedAccessories=_useSelector.accessories;var getLayer=function getLayer(key,i){var layer=get(accessories,[key,\"layer\"]);if(typeof layer===\"function\")return React.createElement(Fragment,{key:\"layer\"+key+i},layer());return null;};return React.createElement(\"g\",{id:\"character-accessories\"},!!selectedAccessories&&selectedAccessories.map(getLayer));};export default CharacterAccessories;","map":{"version":3,"sources":["/var/www/html/startup/src/components/Character/layers/accessories.tsx"],"names":["React","Fragment","useSelector","accessories","get","CharacterAccessories","store","character","selectedAccessories","getLayer","key","i","layer","map"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,MAAOC,CAAAA,WAAP,KAAwB,2CAAxB,CAEA,MAAOC,CAAAA,GAAP,KAAgB,eAAhB,CAGA,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,EAAM,kBACWH,WAAW,CAAC,SAACI,KAAD,QAAwBA,CAAAA,KAAK,CAACC,SAA9B,EAAD,CADtB,CACbC,mBADa,cAC1BL,WAD0B,CAGlC,GAAMM,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,GAAD,CAAcC,CAAd,CAA4B,CAC5C,GAAMC,CAAAA,KAAK,CAAGR,GAAG,CAACD,WAAD,CAAc,CAACO,GAAD,CAAM,OAAN,CAAd,CAAjB,CAEA,GAAI,MAAOE,CAAAA,KAAP,GAAiB,UAArB,CAAiC,MAAO,qBAAC,QAAD,EAAU,GAAG,CAAE,QAAUF,GAAV,CAAgBC,CAA/B,EAAmCC,KAAK,EAAxC,CAAP,CAEjC,MAAO,KAAP,CACA,CAND,CAQA,MAAO,0BAAG,EAAE,CAAC,uBAAN,EAA+B,CAAC,CAACJ,mBAAF,EAAyBA,mBAAmB,CAACK,GAApB,CAAwBJ,QAAxB,CAAxD,CAAP,CACA,CAZD,CAcA,cAAeJ,CAAAA,oBAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport accessories from \"@/components/CharacterOptions/accessories\";\n\nimport get from \"lodash-es/get\";\nimport { IStoreState } from \"@/interfaces/IStoreState\";\n\nconst CharacterAccessories = () => {\n\tconst { accessories: selectedAccessories } = useSelector((store: IStoreState) => store.character);\n\n\tconst getLayer = (key: string, i: number) => {\n\t\tconst layer = get(accessories, [key, \"layer\"]);\n\n\t\tif (typeof layer === \"function\") return <Fragment key={\"layer\" + key + i}>{layer()}</Fragment>;\n\n\t\treturn null;\n\t};\n\n\treturn <g id=\"character-accessories\">{!!selectedAccessories && selectedAccessories.map(getLayer)}</g>;\n};\n\nexport default CharacterAccessories;\n"]},"metadata":{},"sourceType":"module"}